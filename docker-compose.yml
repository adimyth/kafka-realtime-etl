services:
  kafka:
    image: confluentinc/cp-kafka:7.6.0
    hostname: kafka
    container_name: kafka
    ports:
      - 9092:9092
    environment:
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:29093
      KAFKA_LISTENERS: PLAINTEXT://kafka:29092,CONTROLLER://kafka:29093,PLAINTEXT_HOST://0.0.0.0:9092
      CLUSTER_ID: "${CLUSTER_ID:-MkU3OEVBNTcwNTJENDM2Qh}"
      KAFKA_LOG_RETENTION_HOURS: 168 # 7 days
      KAFKA_LOG_SEGMENT_BYTES: 1073741824 # The maximum size of a log segment file. When this size is reached a new log segment will be created.
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 300000 # 5 minutes
    volumes:
      - kafka_data:/var/lib/kafka/data

  schema-registry:
    image: confluentinc/cp-schema-registry:7.6.0
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - kafka
    ports:
      - 8081:8081
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka:29092

  postgres:
    image: postgres:16
    container_name: postgres
    env_file:
      - .env
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data

  control-center:
    image: confluentinc/cp-enterprise-control-center:latest
    container_name: control-center
    depends_on:
      - kafka
      - schema-registry
    ports:
      - 9021:9021
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: kafka:29092
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021

  producer:
    container_name: producer
    build: .
    command: ["producer"]
    ports:
      - 8000:8000
    depends_on:
      - kafka
      - schema-registry
      - postgres
    env_file:
      - .env

  consumer-purchase:
    container_name: consumer-purchase
    build: .
    command: ["consumer", "simple_processor", "purchase"]
    depends_on:
      - kafka
      - schema-registry
      - postgres
      - producer
    env_file:
      - .env

  consumer-order:
    container_name: consumer-order
    build: .
    command: ["consumer", "simple_processor", "order"]
    depends_on:
      - kafka
      - schema-registry
      - postgres
      - producer
    env_file:
      - .env

  consumer-delivery:
    container_name: consumer-delivery
    build: .
    command: ["consumer", "simple_processor", "delivery"]
    depends_on:
      - kafka
      - schema-registry
      - postgres
      - producer
    env_file:
      - .env

  consumer-aggregator:
    container_name: consumer-aggregator
    build: .
    command: ["consumer", "aggregator"]
    depends_on:
      - kafka
      - schema-registry
      - postgres
      - producer
    env_file:
      - .env
    volumes:
      - ./event_summary_charts:/app/event_summary_charts

  correction_mechanism:
    container_name: correction_mechanism
    build: .
    command: python correction_mechanism.py
    depends_on:
      - kafka
      - schema-registry
      - postgres
    env_file:
      - .env

volumes:
  pgdata:
  kafka_data:
    driver: local
